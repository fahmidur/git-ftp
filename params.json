{"name":"Git-ftp","tagline":"Git powered FTP client written as shell script.","body":"README of git-ftp\r\n=================\r\n\r\n* &copy; Ren√© Moser, mail@renemoser.net, 2010-2012\r\n* This application is licenced under [GNU General Public License, Version 3.0]\r\n\r\nThis is free and open source software. If you like and use it, flattr it ([flattr?][WhatisFlattr]). Thx.\r\n\r\n[![][FlattrButton]][FlattrLink] \r\n\r\n\r\nSummary\r\n-------\r\n\r\nGit powered FTP client written as shell script.\r\n\r\n\r\nAbout\r\n-----\r\n\r\nI use git-ftp for my script based projects, mostly PHP. Most of the low-cost\r\nweb hosting companies do not provide SSH or git support, but only FTP.\r\n\r\nThat is why I needed an easy way to deploy my git tracked projects. Instead of\r\ntransfering the whole project, I thought, why not only transfer the files\r\nthat changed since the last time, git can tell me those files.\r\n\r\nEven if you are playing with different branches, git-ftp knows which files\r\nare different. No ordinary FTP client can do that.\r\n\r\n\r\nKnown Issues\r\n------------\r\n\r\n* See [git-ftp issues on GitHub] for open issues\r\n\r\n\r\nInstalling\r\n----------\r\n\r\nSee INSTALL file.\r\n\r\n\r\nUsage\r\n-----\r\n\r\n\t$ cd my_git_tracked_project\r\n\t$ git ftp push --user <user> --passwd <password> ftp://host.example.com/public_html\r\n\r\nFor interactive password prompt use:\r\n\r\n\t$ git ftp push -u <user> -p - ftp://host.example.com/public_html\r\n\r\nPushing for the first time:\r\n\r\n\t$ git ftp init -u <user> -p - ftp://host.example.com/public_html\r\n\r\nUsing Defaults\r\n--------------\r\n\r\nSetting defaults for a git project in .git/config\r\n\r\n\t$ git config git-ftp.user john\r\n\t$ git config git-ftp.url ftp.example.com\r\n\t$ git config git-ftp.password secr3t\r\n\t$ git config git-ftp.cacert caCertStore\r\n\t$ git config git-ftp.deployedsha1file mySHA1File\r\n\t$ git config git-ftp.syncroot Output\r\n\t$ git config git-ftp.insecure 1\r\n\t\r\n\r\nAfter setting defaults, push to `john@ftp.example.com` is as simple as\r\n\r\n\t$ git ftp push\r\n\r\n\r\nUsing Scopes\r\n------------\r\n\r\nFor using defaults for different systems, use the so called scope feature.\r\n\r\n\t$ git config git-ftp.<scope>.<(param)> <value>\r\n\twith param := {url|user|password|cacert|syncroot|curl-insecure|deployedsha1file}\r\n\r\nHere I set the params for the scope `foobar`\r\n\r\n\t$ git config git-ftp.foobar.url ftp.testing.com:8080/foobar-path\r\n\t$ git config git-ftp.foobar.password simp3l\r\n\r\nSet scope params using action `add-scope`\r\n\r\n\t$ git ftp add-scope foobar ftp://username:simp3l@ftp.testing.com:8080/foobar-path\r\n\r\nYou can also remove a previously set scope using `remove-scope`\r\n\r\n\t$ git ftp remove-scope foobar\r\n\r\nPush to scope `foobar` alias `john@ftp.testing.com:8080/foobar-path` using password `simp3l`\r\n\r\n\t$ git ftp push -s foobar\r\n\r\nBecause I didn't set the user for this scope, it takes the user `john` as set before in defaults.\r\n\r\n\r\nIgnoring Files to be synced\r\n---------------------------\r\n\r\nAdd file names to `.git-ftp-ignore` to be ignored.\r\n\r\nUnlike `.gitignore`, the pattern matching uses regular expressions (instead of globbing).\r\n\r\nIgnoring all in directory `config`:\r\n\r\n\tconfig/.*\r\n\r\nIgnoring all files having extension `.txt` in `./` :\r\n\r\n\t.*\\.txt\r\n\r\nThis ignores `a.txt` and `b.txt` but not `dir/c.txt`\r\n\r\nIgnoring a single file called `foobar.txt`:\r\n\r\n\tfoobar\\.txt\r\n\r\n\r\nTesting and Help Manual\r\n-----------------------\r\n\r\nFor testing mode use `--dry-run` alias `-D`\r\n\r\n\t$ git ftp push -u <user> -p --dry-run ftp://host.example.com/public_html\r\n\r\nFor more options and features see man page or help:\r\n\r\n\t$ git ftp help\r\n\r\n\r\nUnit Tested\r\n-----------\r\n\r\nCore functionality is unit tested on Linux using shunit2. You can find the tests in `tests/`.\r\n\r\n\r\nContributions\r\n-------------\r\n\r\nDon't hesitate to use GitHub to improve this tool. Don't forget to add yourself to the AUTHORS file.\r\n\r\n[git-ftp issues on GitHub]: http://github.com/resmo/git-ftp/issues\r\n[WhatisFlattr]: http://en.wikipedia.org/wiki/Flattr\r\n[FlattrLink]: https://flattr.com/thing/99914/Git-ftp\r\n[FlattrButton]: http://api.flattr.com/button/button-static-50x60.png\r\n[GNU General Public License, Version 3.0]: http://www.gnu.org/licenses/gpl-3.0-standalone.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}